import mongoose from "mongoose";

const EventBookingSchema = new mongoose.Schema({
  _id: { type: String, required: true },
  CustomerName: { type: String },
  PhoneNumber: { type: Number },
  WhatsAppNumber: { type: Number },
  Email: { type: String },
  CustomerAge: { type: Number },
  event_id: { type: String, index: true },
  EventDateTime_id: { type: String, index: true },
  EventTicketType: { type: String, index: true },
  EventTicket_id: { type: String, index: true },
  TicketQuantity: { type: Number, default: 0 },
  TicketPrice: { type: Number },
  PromoterNote: { type: String },
  Booking_id: { type: String, index: true, unique: true },
  Transaction_id: { type: String },
  Promocode_id: { type: String },
  TicketAmount: { type: Number },
  PromocodeDiscountAmount: { type: Number },
  ConvenienceFee: { type: Number },
  GST: { type: Number },
  TotalAmount: { type: Number },
  BookingDateTime: { type: String },
  FilterationBookingDateTime: { type: Date },
  BookingSource: { type: String, index: true },
  promoter_id: { type: String, index: true },
  customer_id: { type: String, index: true },
  customer_Address: { type: String },
  customer_Pincode: { type: String },
  customer_Country: { type: String },
  customer_CountryIsoCode: { type: String },
  customer_State: { type: String },
  customer_StateIsoCode: { type: String },
  customer_City: { type: String },
  customer_CityIsoCode: { type: String },
  status: { type: Number, default: 1, index: true },
  Qr_image_path: {
    type: String,
  },
  mihpayid: { type: String },
  unmappedstatus: { type: String },
  mode: { type: String },
  bank_ref_num: { type: String },
  cardnum: { type: String },
  addedon: { type: String },
  error: { type: String },
  error_Message: { type: String },
  payment_source: { type: String },
  net_amount_debit: { type: String },
});

const EventBookings = mongoose.model("EventBookings", EventBookingSchema);

export default EventBookings;
